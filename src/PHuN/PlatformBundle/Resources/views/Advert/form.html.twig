{# src/PHuN/PlatformBundle/Resources/views/Advert/form.html.twig #}

{# Cette vue n'hérite de personne, elle sera incluse par d'autres vues qui, elles, hériteront probablement du layout. Je dis probablement #}

<h3> Formulaire d'annonce </h3>
{{ app.user.username }} veut rajouter une annonce ...

{# On laisse vide la vue pour l'instant, on la comblera plus tard #}


<div class="well">
	{{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

	{# Les erreurs générales du formulaire #}
	{{ form_errors(form) }}

	<div class="form-group">
		{# Génération du label. #}
		{{ form_label(form.title, "Titre de l'annonce", {'label_attr': {'class':'col-sm-3 control-label'}}) }}

		{# Affichage des erreurs pour ce champ précis. #}
		{{ form_errors(form.title) }}

		<div class="col-sm-4">
		{# Génération de l'input #}
		{{ form_widget(form.title, {'attr': {'class':'form-control'}}) }}
		</div>
	</div>
	
	{# Idem pour un autre champ. #}
	<div class="form-group">
		{{ form_label(form.content, "Contenu de l'annonce", {'label_attr': {'class': 'col-sm-3 control-label'}})}}
		{{ form_errors(form.title) }}
		<div class="col-sm-4">
			{{ form_widget(form.content, {'attr': {'class':'form-control'}}) }}
		</div>	
	</div>	

	{# Génération du label + error + widget pour un champ #}
	<div class="form-group">
		{{ form_label(form.title, "Date de l'annonce", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

		<div class="input-append date">
			{{ form_widget(form.date, {attr: {'data-format': "dd/MM/yyyy"}}) }}
		</div>			
	</div>
	
	<div class="form-group">
		{{ form_label(form.author, "Auteur de l'annonce", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

		<div class="col-sm-4">
			{{ form_widget(form.author, {'attr': {'class':'form-control'}}) }}
		</div>
	</div>	

	<div class="form-group">
		{{ form_label(form.published, "Published", {'label_attr': {'class': 'col-sm-3 checkbox'}}) }}
		
		{{ form_widget(form.published) }}
					
	</div>

	{{ form_rest(form) }}

	{# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
	{{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}


	{{ form_end(form) }}	
</div>



<textarea class="tinymce"></textarea>



  

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#phun_platformbundle_advert_categories');

    // On ajoute un lien pour ajouter une nouvelle catégorie
    var $addLink = $('<a href="#" id="add_category" class="btn btn-default">Ajouter une catégorie</a>');
    $container.append($addLink);

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $addLink.click(function(e) {
      addCategory($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addCategory($container);
    } else {
      // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire Categorie
    function addCategory($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Catégorie n°' + (index+1))
          .replace(/__name__/g, index));

      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien
      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>

{{ tinymce_init() }}
